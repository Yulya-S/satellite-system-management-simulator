extends VBoxContainer

@onready var System = $"../../../../TextureRect/SubViewport/System"

@onready var UnitError = $Unit/Error
@onready var UnitType = $Unit/VBoxContainer/Type
@onready var UnitPositionOnCircle = $Unit/VBoxContainer/PositionOnCircle
@onready var UnitY = $Unit/VBoxContainer/Y

@onready var UniqueError = $Unique/Error
@onready var UniqueType = $Unique/VBoxContainer/Type
@onready var UniquePositionOnCircle = $Unique/VBoxContainer/PositionOnCircle
@onready var UniqueY = $Unique/VBoxContainer/Y

@onready var PackError = $Pack/Error

@onready var NetError = $Net/Error
@onready var NetStep = $Net/VBoxContainer/Step

const page_name: String = "–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤üõ∞"


func _ready() -> void:
	# –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
	for i in [UnitPositionOnCircle, UnitY, UniquePositionOnCircle, UniqueY, NetStep]:
		i.get_child(0).set_text(str(int(i.value)))


# –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª–æ–∂–µ–Ω–∏—è –Ω–∞ –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –µ–¥–∏–Ω–∏—á–Ω–æ–≥–æ
func _on_unit_position_on_circle_value_changed(value: int) -> void:
	UnitPositionOnCircle.get_child(0).set_text(str(value))

# –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤—ã—Å–æ—Ç—ã –¥–ª—è –µ–¥–∏–Ω–∏—á–Ω–æ–≥–æ
func _on_unit_y_value_changed(value: int) -> void:
	UnitY.get_child(0).set_text(str(value))

# –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª–æ–∂–µ–Ω–∏—è –Ω–∞ –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏ –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ
func _on_unique_position_on_circle_value_changed(value: int) -> void:
	UniquePositionOnCircle.get_child(0).set_text(str(value))

# –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤—ã—Å–æ—Ç—ã –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ
func _on_unique_y_value_changed(value: int) -> void:
	UniqueY.get_child(0).set_text(str(value))
	
# –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è —à–∞–≥–∞ –¥–ª—è —Å–µ—Ç–∫–∏
func _on_net_step_value_changed(value: int) -> void:
	NetStep.get_child(0).set_text(str(value))


# –≤—ã–∑–æ–≤ —Å–∏–≥–Ω–∞–ª–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞
func add_object(error, obj_name: String, radius: String, position_on_circle, y):
	Settings.set_error(error)
	Settings.emit_signal("add_object", "res://scenes/objects/" + obj_name + ".tscn",
						 int(radius), position_on_circle.value, y.value)


# –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –µ–¥–∏–Ω–∏—á–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
func _on_unit_button_down() -> void:
	var radius: String = $Unit/VBoxContainer/Radius.get_text()
	const min_r: int = 300
	
	if not radius.is_valid_int() or int(radius) < min_r:
		Settings.set_error(UnitError, "–†–∞–¥–∏—É—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º –±–æ–ª—å—à–µ " + str(min_r))
	else:
		const objects = ["cubsat", "oneWeb"]
		add_object(UnitError, objects[UnitType.selected], radius, UnitPositionOnCircle, UnitY)


# –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
func _on_unique_button_down() -> void:
	var radius: String = $Unique/VBoxContainer/Radius.get_text()
	const min_r: int = 1000
	const objects = ["mks", "lemur"]
	var unique_objects = []
	for i in System.System.get_children():
		if i.unique: unique_objects.push_back(i.model_name)
	
	if not radius.is_valid_int() or int(radius) < min_r:
		Settings.set_error(UniqueError, "–†–∞–¥–∏—É—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º –±–æ–ª—å—à–µ " + str(min_r))
	elif objects[UniqueType.selected] in unique_objects:
		Settings.set_error(UniqueError, "–û–±—ä–µ–∫—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Å–∏—Å—Ç–µ–º–µ")
	else:
		add_object(UniqueError, objects[UniqueType.selected], radius, UniquePositionOnCircle, UniqueY)


# –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –æ–±—ä–µ–∫—Ç–æ–≤
func _on_pack_button_down() -> void:
	var count: String = $Pack/VBoxContainer/Count.get_text()
	var start: String = $Pack/VBoxContainer/Start.get_text()
	var step: String = $Pack/VBoxContainer/Step.get_text()
	const min_start: int = 300
	const min_step: int = 10
	
	if not count.is_valid_int() or not start.is_valid_int() or not step.is_valid_int():
		Settings.set_error(PackError, "–ó–Ω–∞—á–µ–Ω–∏—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ü–µ–ª—ã–º–∏ —á–∏—Å–ª–∞–º–∏")
	elif int(count) <= 0 or int(start) <= 0 or int(step) <= 0:
		Settings.set_error(PackError, "–ó–Ω–∞—á–µ–Ω–∏—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è")
	elif int(start) < min_start:
		Settings.set_error(PackError, "–û—Ç—Å—Ç—É–ø –æ—Ç —Ü–µ–Ω—Ç—Ä–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–æ–ª—å—à–µ " + str(min_start))
	elif int(step) < min_step:
		Settings.set_error(PackError, "–®–∞–≥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–æ–ª—å—à–µ " + str(min_step))
	else:
		Settings.set_error(PackError)
		for i in int(count):
			Settings.emit_signal("add_object", "res://scenes/objects/cubsat.tscn", int(start) + i * int(step), 0, 90)


# –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ç–∫–∏ starlink
func _on_net_button_down() -> void:
	var start: String = $Net/VBoxContainer/Start.get_text()
	const min_start: int = 300
	if not start.is_valid_int() or int(start) < min_start:
		Settings.set_error(NetError, "–û—Ç—Å—Ç—É–ø –æ—Ç —Ü–µ–Ω—Ç—Ä–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º –±–æ–ª—å—à–µ " + str(min_start))
	else:
		Settings.set_error(NetError)
		Settings.emit_signal("add_net", int(start), NetStep.value)
